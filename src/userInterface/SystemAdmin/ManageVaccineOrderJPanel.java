/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userInterface.SystemAdmin;

import business.EcoSystem;
import business.Enterprise.DistributorEnterprise;
import business.Enterprise.Enterprise;
import business.Enterprise.PHDEnterprise;
import business.Order.OrderItem;
import business.UserAccount.UserAccount;
import business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhishek
 */
public class ManageVaccineOrderJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount userAccount;
    /**
     * Creates new form ManageOrdersInTheSystemPanel
     */
    public ManageVaccineOrderJPanel(JPanel userProcessContainer,EcoSystem system,UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.userAccount = userAccount;
        populateOrderTable();
    }
    
    public void populateOrderTable(){
        DefaultTableModel dtm = (DefaultTableModel) tblOrders.getModel();
        dtm.setRowCount(0);
        
        for(WorkRequest req : system.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[7];
            row[0] = req.getOrder().getOrderNumber();
            row[1] = req.getRequestDate();
            row[2] = req.getOrder().getSite();
            row[3] = req;
            row[4] = req.getOrder().getStatus() == null ? null : req.getOrder().getStatus() ;
            row[5] = req.getOrder().getBillAmount();
            row[6] = req.getSender().getPerson().getFirstName() + " " + req.getSender().getPerson().getLastName();
            dtm.addRow(row);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        btnDecline = new javax.swing.JButton();
        btnApprove = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        btnViewDet = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDetails = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Manage Orders");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, -1, -1));

        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Order Id", "Site", "Date", "Status", "Order Message", "Order Cost", "PHD"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrders);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 940, 145));

        btnDecline.setText("Decline");
        btnDecline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeclineActionPerformed(evt);
            }
        });
        add(btnDecline, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 230, -1, -1));

        btnApprove.setText("Approve");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });
        add(btnApprove, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 230, -1, -1));

        btnback.setText("<< Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });
        add(btnback, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, -1, -1));

        btnViewDet.setText("View Details");
        btnViewDet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetActionPerformed(evt);
            }
        });
        add(btnViewDet, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, -1, -1));

        tblDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Type", "Vaccine", "Quantity", "Manufacturer", "Federal Funding", "State Funding"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblDetails);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 310, 599, 272));
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeclineActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrders.getSelectedRow();

        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select an order to cancel!");
        }else{
            WorkRequest req = (WorkRequest) tblOrders.getValueAt(selectedRow, 3);

            if(!req.getStatus().equals("Order Approved")){
                req.setStatus("Order Declined");
                req.getOrder().setStatus("Declined by CDC");
                req.setReceiver(userAccount);
                Calendar cal = Calendar.getInstance();
                req.setResolveDate(cal.getTime());
                req.getOrder().setTimeStamp(cal.getTime());
            }else{
                JOptionPane.showMessageDialog(null, "This order request cannot be declined!");
            }
        }
        populateOrderTable();
    }//GEN-LAST:event_btnDeclineActionPerformed

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        // TODO add your handling code here:
       int selectedRow = tblOrders.getSelectedRow();

        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select an order to approve!");
        }else{
            WorkRequest req = (WorkRequest) tblOrders.getValueAt(selectedRow, 3);
            if(!req.getStatus().equals("Order Approved")){
                req.setStatus("Order Approved");
                req.getOrder().setStatus("Pending At The Distributor");
                req.setReceiver(userAccount);
                Calendar cal = Calendar.getInstance();
                req.setResolveDate(cal.getTime());
                req.getOrder().setTimeStamp(cal.getTime());

                WorkRequest newRequest = new WorkRequest();
                newRequest.setRequestDate(cal.getTime());
                newRequest.setSender(userAccount);
                newRequest.setOrder(req.getOrder());
                userAccount.getWorkQueue().getWorkRequestList().add(newRequest);
                newRequest.setStatus("Pending Approval!");

                for(Enterprise e : system.getEnterpriseDirectory().getEnterpriseList()){
                    if(e instanceof DistributorEnterprise){
                        e.getWorkQueue().getWorkRequestList().add(newRequest);
                        break;
                    }
                }

            }else{
                JOptionPane.showMessageDialog(null, "This Order was already approved!");
            }
        }
        populateOrderTable();
    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnbackActionPerformed

    private void btnViewDetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrders.getSelectedRow();

        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select an order to view details!");
        }
        else{
            DefaultTableModel dtm = (DefaultTableModel) tblDetails.getModel();
            dtm.setRowCount(0);

            //Order order = (Order) tblOrders.getValueAt(selectedRow, 0);
            WorkRequest req = (WorkRequest) tblOrders.getValueAt(selectedRow, 3);

            for(OrderItem oi : req.getOrder().getOrderItemList()){
                boolean flag = false;
                Object[] row = new Object[6];
                row[0] = oi.getVaccineType();
                row[1] = oi.getVaccine();
                row[2] = oi.getBatchQuantity();
                row[3] = oi.getManufacturer();
                row[4] = oi.getVaccineType().getFundingInfo();

                for(Enterprise e : system.getEnterpriseDirectory().getEnterpriseList()){
                    if(e instanceof PHDEnterprise){
                        PHDEnterprise pent = (PHDEnterprise) e;
                        for(String s : oi.getVaccineType().getStateFundedList()){
                            if(req.getOrder().getSite().getStateName().equals(s)){
                                flag = true;
                                break;
                            }
                        }
                    }
                }

                if(flag == true) row[5] = "YES";
                else row[5] = "NO";

                dtm.addRow(row);
            }
        }
    }//GEN-LAST:event_btnViewDetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnDecline;
    private javax.swing.JButton btnViewDet;
    private javax.swing.JButton btnback;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDetails;
    private javax.swing.JTable tblOrders;
    // End of variables declaration//GEN-END:variables
}
