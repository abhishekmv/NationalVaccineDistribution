/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface;

import business.DB4OUtil.DB4OUtil;
import business.EcoSystem;
import business.Enterprise.DistributorEnterprise;
import business.Enterprise.Enterprise;
import business.Enterprise.PHDEnterprise;
import business.Network.CityNetwork;
import business.Network.StateNetwork;
import business.Organization.Organization;
import business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Abhishek
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
      private EcoSystem system;
     private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    
    public MainJFrame() {
        initComponents();
        system = dB4OUtil.retrieveSystem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        loginJButton = new javax.swing.JButton();
        logoutJButton = new javax.swing.JButton();
        passwordJPasswordField = new javax.swing.JPasswordField();
        userProcessContainer = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(234);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("User Name :");

        jLabel2.setText("Password :");

        loginJButton.setText("Login");
        loginJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginJButtonActionPerformed(evt);
            }
        });

        logoutJButton.setText("Logout");
        logoutJButton.setEnabled(false);
        logoutJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(loginJButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(logoutJButton)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(usernameJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                    .addComponent(passwordJPasswordField))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(logoutJButton)
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(usernameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passwordJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(loginJButton)
                .addContainerGap(224, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        userProcessContainer.setBackground(new java.awt.Color(255, 255, 204));
        userProcessContainer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        userProcessContainer.setLayout(new java.awt.CardLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/vaccines copy.gif"))); // NOI18N
        userProcessContainer.add(jLabel3, "card2");

        jSplitPane1.setRightComponent(userProcessContainer);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutJButtonActionPerformed
        // TODO add your handling code here:
        
                    userProcessContainer.removeAll();
                    JPanel empty = new JPanel();
                     userProcessContainer.add(empty);
                    ((CardLayout)userProcessContainer.getLayout()).next(userProcessContainer);
                    logoutJButton.setEnabled(false);
                    usernameJTextField.setEnabled(true);
                    passwordJPasswordField.setEnabled(true);
                    loginJButton.setEnabled(true);
        
                    dB4OUtil.storeSystem(system);
    }//GEN-LAST:event_logoutJButtonActionPerformed

    private void loginJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginJButtonActionPerformed
            // TODO add your handling code here:
        
        
        String userName = usernameJTextField.getText();
        char[] passwordCharArray = passwordJPasswordField.getPassword();
        String password = String.valueOf(passwordCharArray);

        UserAccount userAccount = system.getUserAccountDirectory().authenticateUser(userName, password);
        Enterprise inEnterprise = null;
        Organization inOrganization = null;

        if (userAccount == null) {
            for (Enterprise e : system.getEnterpriseDirectory().getEnterpriseList()) {
                userAccount = e.getUserAccountDirectory().authenticateUser(userName, password);
                if (userAccount != null) {
                    inEnterprise = e;
                    break;
                } 
                if(userAccount == null){
                    if (!e.getOrganizationDirectory().getOrganizationList().isEmpty()) {
                        if(e instanceof DistributorEnterprise){
                            DistributorEnterprise de = (DistributorEnterprise)e;
                            for (Organization o : de.getOrganizationDirectory().getOrganizationList()) {
                                userAccount = o.getUserAccountDirectory().authenticateUser(userName, password);
                                if (userAccount != null) {
                                    inEnterprise = e;
                                    inOrganization = o;
                                    break;
                                }
                            }   
                        }
                    }
                }
                if(userAccount != null){
                break ;
            }
            }
            
        }
        
        if (userAccount == null) {
            for(Enterprise e : system.getEnterpriseDirectory().getEnterpriseList()){
                    if (e instanceof PHDEnterprise) {
                        PHDEnterprise ent = (PHDEnterprise) e;
                        for (Enterprise en : ent.getEnterpriseDirectory().getEnterpriseList()) {
                            userAccount = en.getUserAccountDirectory().authenticateUser(userName, password);
                            if (userAccount != null) {
                                inEnterprise = en;
                                break;
                            }
                            if (userAccount == null) {
                                if (!en.getOrganizationDirectory().getOrganizationList().isEmpty()) {
                                    for (Organization org : e.getOrganizationDirectory().getOrganizationList()) {
                                        userAccount = org.getUserAccountDirectory().authenticateUser(userName, password);
                                        if (userAccount != null) {
                                            inEnterprise = en;
                                            inOrganization = org;
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if(userAccount != null){
                        break;
                    }
                }
        }
        
        if (userAccount == null) {
            for(Enterprise e : system.getEnterpriseDirectory().getEnterpriseList()){
                    if (e instanceof PHDEnterprise) {
                        PHDEnterprise ent = (PHDEnterprise) e;
                        for (CityNetwork nc : ent.getCityNetworkDirectory().getCityNetworkDirectory()) {
                            for (Enterprise en : nc.getEnterpriseDirectory().getEnterpriseList()) {
                                userAccount = en.getUserAccountDirectory().authenticateUser(userName, password);
                                if (userAccount != null) {
                                    inEnterprise = en;
                                    break;
                                }
                                if (userAccount == null) {
                                    if (!en.getOrganizationDirectory().getOrganizationList().isEmpty()) {
                                        for (Organization org : en.getOrganizationDirectory().getOrganizationList()) {
                                            userAccount = org.getUserAccountDirectory().authenticateUser(userName, password);
                                            if (userAccount != null) {
                                                inEnterprise = en;
                                                inOrganization = org;
                                                break;
                                            }
                                        }
                                    }
                                }
                                if(userAccount != null){
                                    break;
                                }
                            }
                            if(userAccount != null){
                                break;
                            }
                        }
                    }
                    if(userAccount != null){
                        break;
                    }
                }
        }

        if (userAccount == null) {
            JOptionPane.showMessageDialog(null, "Invalid Credentials!!");
        } else {
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            userProcessContainer.add("WorkArea", userAccount.getRole().createWorkArea(userProcessContainer, userAccount, inOrganization, inEnterprise, system));
            layout.next(userProcessContainer);
            
            logoutJButton.setEnabled(true);
                    usernameJTextField.setEnabled(false);
                    passwordJPasswordField.setEnabled(false);
                    loginJButton.setEnabled(false);
        }
        usernameJTextField.setText("");
          passwordJPasswordField.setText("");

         
    }//GEN-LAST:event_loginJButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton loginJButton;
    private javax.swing.JButton logoutJButton;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JPanel userProcessContainer;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
