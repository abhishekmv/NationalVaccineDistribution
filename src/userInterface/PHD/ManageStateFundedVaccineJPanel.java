/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.PHD;

import business.Enterprise.PHDEnterprise;
import business.Vaccine.VaccineType;
import business.Vaccine.VaccineTypeDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhishek
 */
public class ManageStateFundedVaccineJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageStateFundedVaccineJPanel
     */
    private JPanel userProcessContainer;
    private VaccineTypeDirectory vaccineTypeDirectory;
    private PHDEnterprise pHDEnterprise;
    
    public ManageStateFundedVaccineJPanel(JPanel userProcessContainer,VaccineTypeDirectory vaccineTypeDirectory,PHDEnterprise pHDEnterprise) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
        this.vaccineTypeDirectory = vaccineTypeDirectory;
        this.pHDEnterprise = pHDEnterprise;
        populateTable();
    }
    
     public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) fundingJTable.getModel();
        dtm.setRowCount(0);
        
        for(VaccineType vt : vaccineTypeDirectory.getVaccineList()){
            Object[] row = new Object[3];
            row[0] = vt;
            row[1] = vt.getFundingInfo();
            for(String s : vt.getStateFundedList()){
                if(s.equals(pHDEnterprise.getStateName())){
                    row[2] = "YES";
                    break;
                }
            }
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fundingJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        approveJButton = new javax.swing.JButton();
        cancelJButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Manage State Funded Vaccine");

        fundingJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Vaccine Type", "Federally Funding", "State Funding"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(fundingJTable);

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        approveJButton.setText("Approve Funding");
        approveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveJButtonActionPerformed(evt);
            }
        });

        cancelJButton.setText("Cancel Funding");
        cancelJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(backJButton)
                        .addGap(108, 108, 108)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(approveJButton)
                        .addGap(48, 48, 48)
                        .addComponent(cancelJButton)))
                .addContainerGap(157, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(backJButton))
                .addGap(57, 57, 57)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(approveJButton)
                    .addComponent(cancelJButton))
                .addContainerGap(234, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:CardLayout layout = (CardLayout) upc.getLayout();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backJButtonActionPerformed

    private void cancelJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = fundingJTable.getSelectedRow();
        
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "No row selected");
        }
        else{
            VaccineType vt = (VaccineType) fundingJTable.getValueAt(selectedRow, 0);
            
            if(!vt.getStateFundedList().isEmpty()){
                for(String s : vt.getStateFundedList()){
                    if(s.equals(pHDEnterprise.getStateName())){
                        vt.getStateFundedList().remove(s);
                        break;
                    }
                }
            }
        }
        populateTable();
    }//GEN-LAST:event_cancelJButtonActionPerformed

    private void approveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveJButtonActionPerformed
        // TODO add your handling code here:
        
          int selectedRow = fundingJTable.getSelectedRow();
        boolean flag = false;
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "No row selected");
        }
        else{
            VaccineType vt = (VaccineType) fundingJTable.getValueAt(selectedRow, 0);
            if(!vt.getStateFundedList().isEmpty()){
                for(String s : vt.getStateFundedList()){
                        if(s.equals(pHDEnterprise.getStateName())){
                        flag = true;
                        break;
                    }
                }
            }
            if(flag == false){
                vt.getStateFundedList().add(pHDEnterprise.getStateName());
            }
        }
        
       populateTable();
    }//GEN-LAST:event_approveJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton cancelJButton;
    private javax.swing.JTable fundingJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
