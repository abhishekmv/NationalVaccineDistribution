/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.PHD;

import business.Enterprise.Enterprise;
import business.Enterprise.PHDEnterprise;
import business.Enterprise.SiteEnterprise;
import business.Network.CityNetwork;
import business.Network.CityNetworkDirectory;
import business.Network.StateNetwork;
import business.Organization.Organization;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhishek
 */
public class ManageSiteJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSiteJPanel
     */
    
      private JPanel upc;
    private PHDEnterprise phdEnterprise;
    private StateNetwork stateNetwork;
    private CityNetworkDirectory cityNetworkDirectory;
    public ManageSiteJPanel(JPanel upc,StateNetwork stateNetwork) {
        initComponents();
        addJLayeredPane.setVisible(false);
         this.upc = upc;
        this.stateNetwork = stateNetwork;
        this.phdEnterprise = stateNetwork.getState().getStatePHD();
        this.cityNetworkDirectory = phdEnterprise.getCityNetworkDirectory();
        populateCombo();
        populateTable();
        enterpriseTypeJTextField.setText(Enterprise.EnterpriseType.Site.getValue());
        
    }

    
     public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) manageSiteJTable.getModel();
        dtm.setRowCount(0);
        
        for(CityNetwork cn : cityNetworkDirectory.getCityNetworkDirectory()){
            for(Enterprise e : cn.getEnterpriseDirectory().getEnterpriseList()){
                if(e instanceof SiteEnterprise){
                    SiteEnterprise se = (SiteEnterprise) e;
                    Object[] row = new Object[3];
                    row[0] = e.getOrganizationID();
                    row[1] = se;
                    row[2] = se.getCityName();
                    dtm.addRow(row);
                }
            }
        }
    }
    
    public void populateCombo(){
        comboCity.removeAllItems();
        
        for(CityNetwork cn : cityNetworkDirectory.getCityNetworkDirectory()){
            comboCity.addItem(cn.getCityName());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        manageSiteJTable = new javax.swing.JTable();
        addJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        addJLayeredPane = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        addSiteJButton = new javax.swing.JButton();
        siteNameJTextField = new javax.swing.JTextField();
        enterpriseTypeJTextField = new javax.swing.JTextField();
        comboCity = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Manage Sites");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(344, 22, 120, -1));

        manageSiteJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "SiteID", "Name", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(manageSiteJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 78, 466, 117));

        addJButton.setText("Add Site");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        add(addJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 230, -1, -1));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, -1));

        addJLayeredPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        addJLayeredPane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Add A Site");
        addJLayeredPane.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 100, -1));

        jLabel3.setText("Site Name :");
        addJLayeredPane.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 70, -1));

        jLabel4.setText("Enterprise Type :");
        addJLayeredPane.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 130, 100, -1));

        addSiteJButton.setText("Add");
        addSiteJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSiteJButtonActionPerformed(evt);
            }
        });
        addJLayeredPane.add(addSiteJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 110, -1));
        addJLayeredPane.add(siteNameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 72, 100, 30));

        enterpriseTypeJTextField.setEditable(false);
        enterpriseTypeJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseTypeJTextFieldActionPerformed(evt);
            }
        });
        addJLayeredPane.add(enterpriseTypeJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 122, 100, 30));

        comboCity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCityActionPerformed(evt);
            }
        });
        addJLayeredPane.add(comboCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 172, 100, 30));

        jLabel6.setText("City :");
        addJLayeredPane.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, -1, -1));

        add(addJLayeredPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 302, 466, 302));
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        // TODO add your handling code here:
        if(cityNetworkDirectory.getCityNetworkDirectory().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Add a city before adding site!");
            return;
        }
        addJLayeredPane.setVisible(true);
    }//GEN-LAST:event_addJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
         CardLayout layout = (CardLayout) upc.getLayout();
        upc.remove(this);
        layout.previous(upc);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void enterpriseTypeJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseTypeJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseTypeJTextFieldActionPerformed

    private void addSiteJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSiteJButtonActionPerformed
        // TODO add your handling code here:
       
        
        String name = siteNameJTextField.getText().trim();
        String city = (String)comboCity.getSelectedItem();
        boolean flag = false;
        
        if(!name.isEmpty()){
            for(CityNetwork cn : cityNetworkDirectory.getCityNetworkDirectory()){
                if(!cn.getEnterpriseDirectory().getEnterpriseList().isEmpty()){
                    for(Enterprise e : cn.getEnterpriseDirectory().getEnterpriseList()){
                        if(e instanceof SiteEnterprise && e.getName().equals(name)){
                            SiteEnterprise s = (SiteEnterprise) e;
                            if(s.getCityName().equals(city)){
                                flag = true;
                                siteNameJTextField.setText("");
                                JOptionPane.showMessageDialog(null, "A Site with this name already exists in the city!");
                            }
                        }
                    }
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please Enter A Name For The Site!");
            flag = true;
        }
        
        if(flag == false){
            for(CityNetwork cn : cityNetworkDirectory.getCityNetworkDirectory()){
                if(cn.getCityName().equals(city)){
                    SiteEnterprise s = (SiteEnterprise)cn.getEnterpriseDirectory().createAndAddEnterprise(name, Enterprise.EnterpriseType.Site);
                    s.getOrganizationDirectory().createOrganization(Organization.Type.Doctor);
                    s.getOrganizationDirectory().createOrganization(Organization.Type.Patient);
                    s.setCityName(city);
                    s.setStateName(cn.getInState());
                     addJLayeredPane.setVisible(false);
                }
            }
        }
        populateTable();
        
    }//GEN-LAST:event_addSiteJButtonActionPerformed

    private void comboCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboCityActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JLayeredPane addJLayeredPane;
    private javax.swing.JButton addSiteJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox comboCity;
    private javax.swing.JTextField enterpriseTypeJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable manageSiteJTable;
    private javax.swing.JTextField siteNameJTextField;
    // End of variables declaration//GEN-END:variables
}
