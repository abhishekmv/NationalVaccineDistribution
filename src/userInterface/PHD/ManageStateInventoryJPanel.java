/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.PHD;

import business.Enterprise.Enterprise;
import business.Enterprise.PHDEnterprise;
import business.Enterprise.SiteEnterprise;
import business.Network.CityNetwork;
import business.Vaccine.Batch;
import business.Vaccine.Vaccine;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhishek
 */
public class ManageStateInventoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageStateInventoryJPanel
     */
    private JPanel userProcessContainer;
    private PHDEnterprise pHDEnterprise;
    public ManageStateInventoryJPanel(JPanel userProcessContainer,PHDEnterprise pHDEnterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.pHDEnterprise =pHDEnterprise;
        populateSiteCombo();
    }

    
    private void populateSiteCombo()
    {
        siteJComboBox.removeAllItems();
        
          for(CityNetwork cNetwork: pHDEnterprise.getCityNetworkDirectory().getCityNetworkDirectory())
        {
            for(Enterprise enterprise : cNetwork.getEnterpriseDirectory().getEnterpriseList())
            {
                if(enterprise instanceof SiteEnterprise){
                    SiteEnterprise siteEnterprise  = (SiteEnterprise)enterprise;
                    siteJComboBox.addItem(siteEnterprise);
                    
                }
            }
        }
    }
        
        
       
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        siteJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        siteJTable = new javax.swing.JTable();

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        siteJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        siteJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siteJComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Site Name :");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Manage Each Site Vaccine Inventory");

        siteJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Vaccine Type", "Vaccine Name", "Batch", "Availability", "Funding"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(siteJTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(backJButton)
                        .addGap(132, 132, 132)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(siteJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 930, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(backJButton))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(siteJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(328, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void siteJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siteJComboBoxActionPerformed
        // TODO add your handling code here:
        SiteEnterprise siteEnterprise = (SiteEnterprise) siteJComboBox.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel) siteJTable.getModel();
        model.setRowCount(0);
        
        if(siteEnterprise!=null)
        {
                    for(Batch b : siteEnterprise.getBatchDirectory().getBatchList())
                           {
                                  for(Vaccine v : b.getVaccineList())
                                   {
                                       if(b.getAvailability()>0)
                                       {
                                       boolean flag = true;
                                       Object[] row = new Object[6];
                                       row[0] = v.getVaccineType().getVaccineTypeName();
                                       row[1] = v.getVaccineName();
                                       
                                       for(String s : v.getVaccineType().getStateFundedList())
                                       {
                                           if(s.equals(siteEnterprise.getStateName()))
                                           {
                                               row[4] = "YES";
                                               flag = false;
                                               break;
                                           
                                           }
                                       
                                       }
                                       if(flag ==true)
                                       {
                                           row[2] = "NON FUNDED";
                                       
                                       }
                                       
                                       row[2] = b.getBatchID();
                                       row[3] = b.getAvailability();
                                       model.addRow(row);
                                       
                                   }
                                   }
        
                           }
        }
    }//GEN-LAST:event_siteJComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox siteJComboBox;
    private javax.swing.JTable siteJTable;
    // End of variables declaration//GEN-END:variables
}
