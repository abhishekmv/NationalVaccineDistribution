/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userInterface.Distributor;


import business.Distributor.Warehouse;
import business.EcoSystem;
import business.Enterprise.DistributorEnterprise;
import business.Enterprise.Enterprise;
import business.Enterprise.PHDEnterprise;
import business.Network.StateNetwork;
import business.Order.OrderItem;
import business.Organization.Organization;
import business.Organization.ShippingOrganization;
import business.Role.Role;
import business.UserAccount.UserAccount;
import business.Vaccine.Batch;
import business.Vaccine.Vaccine;
import business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Abhishek
 */
public class ManageSiteOrderJPanel extends javax.swing.JPanel {
    private JPanel upc;
    private DistributorEnterprise distEnterprise;
    private UserAccount userAccount;
    private EcoSystem system;

    /**
     * Creates new form ManageSiteOrdersPanel
     */
    public ManageSiteOrderJPanel(JPanel upc,DistributorEnterprise distEnterprise,UserAccount userAccount,EcoSystem system) {
        initComponents();
        this.upc = upc;
        this.distEnterprise = distEnterprise;
        this.userAccount = userAccount;
        this.system = system;
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) tblOrders.getModel();
        dtm.setRowCount(0);
        
        for(WorkRequest req : distEnterprise.getWorkQueue().getWorkRequestList()){
            if(req.getSender().getRole().getRoleName().equals(Role.RoleType.SystemAdminRole.getValue())){
                Object[] row = new Object[8];
                row[0] = req.getOrder().getOrderNumber();
                row[1] = req.getRequestDate();
                row[2] = req.getOrder().getBillAmount();
                row[3] = req.getOrder().getSite().getName();
                row[4] = req.getOrder().getSite().getStateName();
                row[6] = req;
                row[7] = req.getOrder().getStatus() == null ? null : req.getOrder().getStatus() ;
                
                for(StateNetwork state : system.getStateNetworkDirectory().getStateNetwork()){
                    if(state.getState().getName().equals(req.getOrder().getSite().getStateName())){
                        row[5] = state.getState().getRegion();
                    }
                }
                
                dtm.addRow(row);
            }
            
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrderDetails = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnDecline = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnApprove = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Manage Site Orders");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, -1, -1));

        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Order Id", "Date", "Order Value", "Site", "State", "Region", "Status", "Order Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrders);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 80, 930, 140));

        btnView.setText("View Details");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 250, -1, -1));

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblOrderDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Type", "Vaccine", "Quantity", "Manufacturer", "Federal Funding", "State Funding"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblOrderDetails);

        jLayeredPane1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 720, 200));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Order Details ");
        jLayeredPane1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 20));

        add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 305, 800, 300));

        btnDecline.setText("Decline");
        btnDecline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeclineActionPerformed(evt);
            }
        });
        add(btnDecline, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 250, -1, -1));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 37, -1, -1));

        btnApprove.setText("Approve");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });
        add(btnApprove, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 245, -1, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrders.getSelectedRow();
        
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select an order to view details!");
        }else{
            DefaultTableModel dtm = (DefaultTableModel) tblOrderDetails.getModel();
            dtm.setRowCount(0);

            //Order order = (Order) tblOrders.getValueAt(selectedRow, 0);
            WorkRequest req = (WorkRequest) tblOrders.getValueAt(selectedRow, 6);

            for(OrderItem oi : req.getOrder().getOrderItemList()){
                boolean flag = false;
                Object[] row = new Object[6];
                row[0] = oi.getVaccineType();
                row[1] = oi.getVaccine();
                row[2] = oi.getBatchQuantity();
                row[3] = oi.getManufacturer();
                row[4] = oi.getVaccineType().getFundingInfo();

                for(Enterprise e : system.getEnterpriseDirectory().getEnterpriseList()){
                    if(e instanceof PHDEnterprise){
                        PHDEnterprise pent = (PHDEnterprise) e;
                        for(String s : oi.getVaccineType().getStateFundedList()){
                            if(req.getOrder().getSite().getStateName().equals(s)){
                                flag = true;
                                break;
                            }
                        }
                    }
                }

                if(flag == true) row[5] = "YES";
                else row[5] = "NO";

                dtm.addRow(row);
            }
         
        }
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrders.getSelectedRow();

        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select an order to approve!");
        }else{
            WorkRequest req = (WorkRequest) tblOrders.getValueAt(selectedRow, 6);
            String reg = (String) tblOrders.getValueAt(selectedRow, 5);
            if(!req.getStatus().equals("Order Approved")){
                
                boolean flag = false;
                Vaccine vacc = null;
                
                for(OrderItem oi : req.getOrder().getOrderItemList()){
                 for(Warehouse w : distEnterprise.getWarehouseList()){  
                     if(w.getWarehouseRegion().equals(reg)){
                        flag = w.getBatchDirectory().isVaccineAvailableAtDistributor(oi.getVaccine(),oi.getBatchQuantity());
                            if(flag == false){
                                vacc = oi.getVaccine();
                                break;
                            }
                        }
                    }
                }
                
                if(flag == false){
                 JOptionPane.showMessageDialog(null, "Not enough stock of " + vacc.getVaccineName()+ " in the inventory!");
                }else{
                 
                 for(OrderItem oi : req.getOrder().getOrderItemList()){
                     for(Warehouse w : distEnterprise.getWarehouseList()){
                         if(w.getWarehouseRegion().equals(reg)){
                            ArrayList<Batch> batch = new ArrayList<>();
                            batch = w.getBatchDirectory().getSiteSellingVaccineBatch(oi.getVaccine(), oi.getBatchQuantity());
                            oi.setBatchList(batch); 
                         }
                    }
                 }
                 
                 for(OrderItem oi : req.getOrder().getOrderItemList()){
                            for(Batch b : oi.getBatchList()){
                                req.getOrder().getSite().getBatchDirectory().getBatchList().add(b);
                            }                        
                     }
                
                req.setStatus("Order Approved");
                req.getOrder().setStatus("Forwarded For Shipment!");
                req.setReceiver(userAccount);
                Calendar cal = Calendar.getInstance();
                req.setResolveDate(cal.getTime());
                req.getOrder().setTimeStamp(cal.getTime());

                WorkRequest newRequest = new WorkRequest();
                newRequest.setRequestDate(cal.getTime());
                newRequest.setSender(userAccount);
                newRequest.setOrder(req.getOrder());
                userAccount.getWorkQueue().getWorkRequestList().add(newRequest);
                newRequest.setStatus("Pending Approval!");
                
                for(Organization o : distEnterprise.getOrganizationDirectory().getOrganizationList()){
                    if(o instanceof ShippingOrganization)
                    {
                        o.getWorkQueue().getWorkRequestList().add(newRequest);
                    }
                }
                }

            }else{
                JOptionPane.showMessageDialog(null, "This Order was already approved!");
            }
        }
        populateTable();
    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnDeclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeclineActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrders.getSelectedRow();
        
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select an order to cancel!");
        }else{
            WorkRequest req = (WorkRequest) tblOrders.getValueAt(selectedRow, 6);
            
            if(!req.getStatus().equals("Order Dispatched!")){
                req.setReceiver(userAccount);
                Calendar cal = Calendar.getInstance();
                req.setResolveDate(cal.getTime());
                req.setStatus("Order Declined!");
                req.getOrder().setStatus("Order Declined by Distributor!");
            }else{
                JOptionPane.showMessageDialog(null, "This order has already been dispatched!");
            }

        }
    }//GEN-LAST:event_btnDeclineActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) upc.getLayout();
        upc.remove(this);
        layout.previous(upc);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDecline;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblOrderDetails;
    private javax.swing.JTable tblOrders;
    // End of variables declaration//GEN-END:variables
}
