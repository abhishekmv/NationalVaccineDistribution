/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userInterface.Distributor;


import business.Distributor.Warehouse;
import business.EcoSystem;
import business.Enterprise.DistributorEnterprise;
import business.Enterprise.ManufacturerEnterprise;
import business.Order.Order;
import business.Order.OrderItem;
import business.UserAccount.UserAccount;
import business.Vaccine.Batch;
import business.Vaccine.Vaccine;
import business.Vaccine.VaccineType;
import business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhishek
 */
public class ManageOrderVaccinesJPanel extends javax.swing.JPanel {
    
    private JPanel upc;
    private UserAccount userAccount;
    private DistributorEnterprise distributorEnterprise;
    private EcoSystem system;
    private Order order;
    private ManufacturerEnterprise manufacturerEnterprise;
    private Warehouse warehouse;

    /**
     * Creates new form OrderVaccinesPanel
     */
    public ManageOrderVaccinesJPanel(JPanel upc,UserAccount userAccount,DistributorEnterprise distributorEnterprise,EcoSystem system,ManufacturerEnterprise manufacturerEnterprise,Warehouse warehouse) {
        initComponents();
        this.upc = upc;
        this.userAccount = userAccount;
        this.distributorEnterprise = distributorEnterprise;
        this.system = system;
        this.manufacturerEnterprise = manufacturerEnterprise;
        this.warehouse = warehouse;
        order = new Order();
        populateTypeCombo();
              txtRegion.setText(warehouse.getWarehouseRegion());
    }
    
     public void populateTypeCombo(){
        comboVacType.removeAllItems();
        
        for(VaccineType vt : system.getVaccineDirectory().getVaccineList()){
            comboVacType.addItem(vt);
        }
    }
  
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblManageOrders = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        comboVacType = new javax.swing.JComboBox();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrderCart = new javax.swing.JTable();
        btnCheckout = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        spinnerQty = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        btnAddToCart = new javax.swing.JButton();
        txtRegion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jLabel5 = new javax.swing.JLabel();
        txtBill = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Manage Order Vaccines");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, -1, -1));

        tblManageOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Type", "Name", "Disease", "Manufacturer", "Federal Funding", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblManageOrders);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 650, 136));

        jLabel4.setText("Vaccine Type");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, -1, 20));

        comboVacType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboVacType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboVacTypeActionPerformed(evt);
            }
        });
        add(comboVacType, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 120, 20));

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblOrderCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Type", "Name", "Quantity", "Manufacturer", "Total Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblOrderCart);

        jLayeredPane1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 570, 144));

        btnCheckout.setText("Check Out!");
        btnCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckoutActionPerformed(evt);
            }
        });
        jLayeredPane1.add(btnCheckout, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 180, -1, -1));

        btnRemove.setText("Remove Item");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        jLayeredPane1.add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, -1, -1));

        add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 440, 652, 240));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, -1, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("In Cart");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 411, -1, -1));

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("Quanity");

        btnAddToCart.setText("Add To Cart");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });

        txtRegion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRegionActionPerformed(evt);
            }
        });

        jLabel2.setText("Warehouse");

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(27, 27, 27)
                .addComponent(spinnerQty, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(jLabel2)
                .addGap(15, 15, 15)
                .addComponent(txtRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnAddToCart)
                .addGap(34, 34, 34))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(spinnerQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addComponent(jLabel2)
                    .addComponent(txtRegion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddToCart))
                .addGap(37, 37, 37))
        );
        jLayeredPane2.setLayer(spinnerQty, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(btnAddToCart, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(txtRegion, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        add(jLayeredPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, -1));

        jLayeredPane3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setText("Bill Amount");

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5)
                    .addComponent(txtBill, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel5)
                .addGap(14, 14, 14)
                .addComponent(txtBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jLayeredPane3.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txtBill, javax.swing.JLayeredPane.DEFAULT_LAYER);

        add(jLayeredPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 580, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void comboVacTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboVacTypeActionPerformed
        // TODO add your handling code here:

        VaccineType vt = (VaccineType)comboVacType.getSelectedItem();

        DefaultTableModel dtm = (DefaultTableModel) tblManageOrders.getModel();
        dtm.setRowCount(0);
        ArrayList<Vaccine> vaccList = new ArrayList<>();

        
                for(Batch b : manufacturerEnterprise.getBatchDirectory().getBatchList()){
                    boolean check = false;
                    for(Vaccine v : b.getVaccineList()){

                        if(v.getVaccineType().equals(vt) && v.getVaccineType().getStatus().equals(VaccineType.ACTIVE)){
                            boolean flag = checkExisting( v , vaccList);
                            if(flag == false){
                                Object[] row = new Object[6];
                                row[0] = vt;
                                row[1] = v;
                                row[2] = vt.getDisease();
                                row[3] = manufacturerEnterprise;
                                row[4] = vt.getFundingInfo();
                                row[5] = v.getvPrice();

                                dtm.addRow(row);
                                vaccList.add(v);
                                break;
                            }
                        }
            }
        }
    }//GEN-LAST:event_comboVacTypeActionPerformed

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblManageOrders.getSelectedRow();
        Warehouse w = warehouse;

        if(selectedRow < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a vaccine to order!");
        }
        else{
            int qty = (int)spinnerQty.getValue();

            if(qty <= 0){
                JOptionPane.showMessageDialog(null, "Please select appropriate quantity to order!");
            }
            else{
                if(w != null){
                    VaccineType vt = (VaccineType)tblManageOrders.getValueAt(selectedRow, 0);
                    Vaccine v = (Vaccine) tblManageOrders.getValueAt(selectedRow, 1);
                    ManufacturerEnterprise manufacturer = (ManufacturerEnterprise) tblManageOrders.getValueAt(selectedRow, 3);
                    OrderItem oi = new OrderItem();
                    oi.setVaccine(v);
                    oi.setManufacturer(manufacturer);
                    oi.setVaccineType(vt);
                    oi.setBatchQuantity(qty);
                    order.getOrderItemList().add(oi);
                    populateCartTable(order);
                }else{
                    JOptionPane.showMessageDialog(null, "Please select a warehouse as destination for order!");
                }
            }
        }

    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void btnCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckoutActionPerformed
        // TODO add your handling code here:

         Warehouse w = warehouse;
         //int qty 
         
        if(w != null){

            if(!order.getOrderItemList().isEmpty()){
                WorkRequest req = new WorkRequest();
                float bill = getBillAmount();
                Calendar c = Calendar.getInstance();
                order.setBillAmount(bill);
                //order.setSite(siteEnterprise);
                //order.setDate(c.getTime());
                req.setWarehouse(w);
                req.setOrder(order);
                req.setStatus("Order Pending at provider");
                req.setSender(userAccount);
                req.setRequestDate(c.getTime());
                system.getMasterOrderCatalog().getOrderCatalog().add(order);
                userAccount.getWorkQueue().getWorkRequestList().add(req);
                manufacturerEnterprise.getWorkQueue().getWorkRequestList().add(req);
                txtBill.setText(String.valueOf(order.getBillAmount()));

                order = new Order();

            }
            else{
                JOptionPane.showMessageDialog(null, "Please place an order and then hit check out!");
            }
        }
        populateCartTable();
    }//GEN-LAST:event_btnCheckoutActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:

        if(!order.getOrderItemList().isEmpty()){
            int selectedRow = tblOrderCart.getSelectedRow();

            if(selectedRow < 0){
                JOptionPane.showMessageDialog(null, "Please select an item to remove from the order!");
            }
            else{
                OrderItem oi = order.getOrderItemList().get(selectedRow);
                order.getOrderItemList().remove(oi);
                populateCartTable(order);
            }
        }else{
            JOptionPane.showMessageDialog(null, "What are you trying to remove?");
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        upc.remove(this);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.previous(upc);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtRegionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRegionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRegionActionPerformed

    public boolean checkExisting(Vaccine vaccine,ArrayList<Vaccine> vacList){
        if(!vacList.isEmpty()){
            for(Vaccine v : vacList){
                if(v.getVaccineName().equals(vaccine.getVaccineName()) && v.getVaccineType().getVaccineTypeName().equals(vaccine.getVaccineType().getVaccineTypeName())){
                    return true;
                }   
            }
        }
        return false;
    }
    
    public void populateCartTable(Order o){
        DefaultTableModel dtm = (DefaultTableModel) tblOrderCart.getModel();
        dtm.setRowCount(0);
        
        if(!o.getOrderItemList().isEmpty()){
            for(OrderItem oi : order.getOrderItemList()){
                Object[] row = new Object[5];
                row[0] = oi.getVaccineType();
                row[1] = oi.getVaccine();
                row[2] = oi.getBatchQuantity();
                row[3] = oi.getManufacturer();
                row[4] = oi.getBatchQuantity()*oi.getVaccine().getvPrice()*20;
                dtm.addRow(row);
            }
        }
    }
    
     public void populateCartTable(){
        DefaultTableModel dtm = (DefaultTableModel) tblOrderCart.getModel();
        dtm.setRowCount(0);
        
        
            for(OrderItem oi : order.getOrderItemList()){
                Object[] row = new Object[5];
                row[0] = oi.getVaccineType();
                row[1] = oi.getVaccine();
                row[2] = oi.getBatchQuantity();
                row[3] = oi.getManufacturer();
                row[4] = oi.getBatchQuantity()*oi.getVaccine().getvPrice()*20;
                dtm.addRow(row);
            }
        
    }
    
    public float getBillAmount(){
        float price = 0;
        
        
        for(OrderItem oi : order.getOrderItemList()){

                price = price + (oi.getVaccine().getvPrice()* 20) * oi.getBatchQuantity();
            
        }
        
        return price;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCheckout;
    private javax.swing.JButton btnRemove;
    private javax.swing.JComboBox comboVacType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner spinnerQty;
    private javax.swing.JTable tblManageOrders;
    private javax.swing.JTable tblOrderCart;
    private javax.swing.JTextField txtBill;
    private javax.swing.JTextField txtRegion;
    // End of variables declaration//GEN-END:variables
}
