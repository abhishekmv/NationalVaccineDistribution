/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userInterface.Manufacturer;


import business.EcoSystem;
import business.Enterprise.ManufacturerEnterprise;
import business.Order.OrderItem;
import business.UserAccount.UserAccount;
import business.Vaccine.Batch;
import business.Vaccine.Vaccine;
import business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhishek
 */
public class ManageDistributorOrderJPanel extends javax.swing.JPanel {
    
    private ManufacturerEnterprise manufacturerEnterprise;
    private EcoSystem system;
    private JPanel upc;
    private UserAccount userAccount;

    /**
     * Creates new form ManageDistributorOrdersPanel
     */
    public ManageDistributorOrderJPanel(JPanel upc,EcoSystem system,UserAccount userAccount,ManufacturerEnterprise manufacturerEnterprise) {
        initComponents();
        this.system = system;
        this.upc = upc;
        this.userAccount = userAccount;
        this.manufacturerEnterprise = manufacturerEnterprise;
        populateOrderTable();
    }
    
    public void populateOrderTable(){
        DefaultTableModel dtm = (DefaultTableModel) tblOrders.getModel();
        dtm.setRowCount(0);
        
        for(WorkRequest req : manufacturerEnterprise.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[5];
            row[0] = req.getOrder().getOrderNumber();
            row[1] = req.getRequestDate();
            row[2] = req.getOrder().getBillAmount();
            row[3] = req.getWarehouse().getWarehouseRegion();
            row[4] = req;
            dtm.addRow(row);
        }
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnApprove = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDetails = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Manage Distributor Orders");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));

        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Date", "Order Value", "Destination", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrders);
        if (tblOrders.getColumnModel().getColumnCount() > 0) {
            tblOrders.getColumnModel().getColumn(0).setResizable(false);
            tblOrders.getColumnModel().getColumn(1).setResizable(false);
            tblOrders.getColumnModel().getColumn(2).setResizable(false);
            tblOrders.getColumnModel().getColumn(3).setResizable(false);
            tblOrders.getColumnModel().getColumn(4).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 71, 812, 166));

        btnView.setText("View Details");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(136, 255, -1, -1));

        btnApprove.setText("Approve Order");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });
        add(btnApprove, new org.netbeans.lib.awtextra.AbsoluteConstraints(369, 255, -1, -1));

        btnCancel.setText("Decline Order");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(647, 253, -1, -1));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 20, -1, -1));

        tblDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Type", "Name", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblDetails);
        if (tblDetails.getColumnModel().getColumnCount() > 0) {
            tblDetails.getColumnModel().getColumn(0).setResizable(false);
            tblDetails.getColumnModel().getColumn(1).setResizable(false);
            tblDetails.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 315, 812, 140));
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrders.getSelectedRow();
        
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select an order to view details!");
        }
        else{
            DefaultTableModel dtm = (DefaultTableModel) tblDetails.getModel();
            dtm.setRowCount(0);
            
            WorkRequest req = (WorkRequest) tblOrders.getValueAt(selectedRow, 4);
            
            for(OrderItem oi : req.getOrder().getOrderItemList()){
                Object[] row = new Object[3];
                row[0] = oi.getVaccine().getVaccineType().getVaccineTypeName();
                row[1] = oi.getVaccine().getVaccineName();
                row[2] = oi.getBatchQuantity();
                dtm.addRow(row);
            }
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed

        // TODO add your handling code here:
        int selectedRow = tblOrders.getSelectedRow();
        
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select an order to approve!");
        }else{
            
            WorkRequest req = (WorkRequest) tblOrders.getValueAt(selectedRow, 4);
            
            if(!req.getStatus().equals("Order Dispatched!")){
                
             
             boolean flag = false;
             Vaccine vacc = null;
             
             for(OrderItem oi : req.getOrder().getOrderItemList()){
                 flag = manufacturerEnterprise.getBatchDirectory().isVaccineAvailable(oi.getVaccine(),oi.getBatchQuantity());
                 if(flag == false){
                     vacc = oi.getVaccine();
                     break;
                 }
             }
             
             if(flag == false){
                 JOptionPane.showMessageDialog(null, "Not enough stock of " + vacc.getVaccineName()+ " in the inventory!");
             }else{
                 
                 for(OrderItem oi : req.getOrder().getOrderItemList()){
                     ArrayList<Batch> batch = new ArrayList<>();
                     batch = manufacturerEnterprise.getBatchDirectory().getSellingVaccineBatch(oi.getVaccine(), oi.getBatchQuantity());
                     oi.setBatchList(batch); 
                    }
                 
                 for(OrderItem oi : req.getOrder().getOrderItemList()){
                     for(Batch b : oi.getBatchList()){
                        req.getWarehouse().getBatchDirectory().getBatchList().add(b);
                     }
                 }
                
                 req.setReceiver(userAccount);
                 Calendar cal = Calendar.getInstance();
                 req.setResolveDate(cal.getTime());
                 req.setStatus("Order Approved And Shipped");
                 req.getOrder().setStatus("Order Approved And Shipped");
                 
                }
            }else{
                JOptionPane.showMessageDialog(null, "This order has already been dispatched!");
            }
        }
        populateOrderTable();
    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrders.getSelectedRow();
        
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select an order to cancel!");
        }else{
            WorkRequest req = (WorkRequest) tblOrders.getValueAt(selectedRow, 4);
            
            if(!req.getStatus().equals("Order Approved And Shipped")){
                req.setReceiver(userAccount);
                Calendar cal = Calendar.getInstance();
                req.setResolveDate(cal.getTime());
                req.setStatus("Order Declined!");
                req.getOrder().setStatus("Order Declined!");
            }else{
                JOptionPane.showMessageDialog(null, "This order has already been dispatched!");
            }

        }
        populateOrderTable();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) upc.getLayout();
        upc.remove(this);
        layout.previous(upc);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDetails;
    private javax.swing.JTable tblOrders;
    // End of variables declaration//GEN-END:variables
}
