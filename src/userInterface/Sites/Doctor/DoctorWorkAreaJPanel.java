/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Sites.Doctor;

import business.EcoSystem;
import business.Enterprise.SiteEnterprise;
import business.Organization.DoctorOrganization;
import business.Organization.Organization;
import business.Organization.OrganizationDirectory;
import business.Organization.PatientOrganization;
import business.Person.PersonDirectory;
import business.UserAccount.UserAccount;
import business.UserAccount.UserAccountDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhishek
 */
public class DoctorWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private SiteEnterprise siteEnterprise;
    private OrganizationDirectory organizationDirectory;
    private PersonDirectory personDirectory;
    private DoctorOrganization doctorOrganization;
    private PatientOrganization patientOrganization;
    private EcoSystem system;
   
    
    public DoctorWorkAreaJPanel(JPanel userProcessContainer,UserAccount userAccount,SiteEnterprise siteEnterprise,DoctorOrganization doctorOrganization,EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.siteEnterprise = siteEnterprise;
        this.system = system;
        this.doctorOrganization = doctorOrganization;
        
        
        for(Organization o : siteEnterprise.getOrganizationDirectory().getOrganizationList())
        {
            if( o instanceof PatientOrganization)
            {
                this.patientOrganization = (PatientOrganization)o;
            }
        
        }
         
        populatePatientTable();
        doctorNameJTextField .setText(userAccount.getPerson().getFirstName()+" "+userAccount.getPerson().getLastName());
    }
    
    private void populatePatientTable()
    {
    
        DefaultTableModel model =  (DefaultTableModel) patientJTable.getModel();;
        model.setRowCount(0);
        
        for(UserAccount ua : patientOrganization.getUserAccountDirectory().getUserAccountList())
        {
        
            Object [] row = new Object[5];
            row[0] = ua.getPerson().getPid();
            row[1] = ua.getPerson().getSsn();
            row[2] = ua.getPerson();
          //  row[2]  = ua.getPerson().getLastName();
            row[3] = ua.getPerson().getDob();
            row[4]  = ua;
            model.addRow(row);
           
        
        }
        
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientJTable = new javax.swing.JTable();
        viewPatientHistoryJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        doctorNameJTextField = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 27)); // NOI18N
        jLabel1.setText("Doctor Work Area ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(254, 27, -1, -1));

        patientJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "SSN", "Patient Name", "Date Of birth", "User Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(patientJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 631, 156));

        viewPatientHistoryJButton.setText("View Patient Medical History");
        viewPatientHistoryJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPatientHistoryJButtonActionPerformed(evt);
            }
        });
        add(viewPatientHistoryJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 330, -1, -1));

        jLabel2.setText("Doctor Name :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 106, -1, -1));

        doctorNameJTextField.setEditable(false);
        add(doctorNameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 98, 130, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void viewPatientHistoryJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPatientHistoryJButtonActionPerformed
        // TODO add your handling code here:
        
        int rowSelected = patientJTable.getSelectedRow();
        
        if(rowSelected<0)
        {
            JOptionPane.showMessageDialog(null,"No row selected");
            return;
        }
        
     //  UserAccount patientUserAccount  = (UserAccount) patientJTable.getValueAt(rowSelected, 4);
        
      //   ViewPatientMedicalHistoryJPanel vpmhjp = new ViewPatientMedicalHistoryJPanel(userProcessContainer,patientUserAccount,userAccount,siteEnterprise);
       // CardLayout layout = (CardLayout) userProcessContainer.getLayout();
     // userProcessContainer.add("ViewPatientMedicalHistoryJPanel", vpmhjp);
     //   layout.next(userProcessContainer);
    }//GEN-LAST:event_viewPatientHistoryJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField doctorNameJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientJTable;
    private javax.swing.JButton viewPatientHistoryJButton;
    // End of variables declaration//GEN-END:variables
}
