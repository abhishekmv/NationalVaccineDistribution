/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Sites;

import business.Enterprise.SiteEnterprise;
import business.Vaccine.Batch;
import business.Vaccine.Vaccine;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhishek
 */
public class ManageSiteInventoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSiteInventoryJPanel
     */
    private JPanel  userProcessConatiner;
    private SiteEnterprise siteEnterprise;
    public ManageSiteInventoryJPanel(JPanel  userProcessConatiner,SiteEnterprise siteEnterprise) {
        initComponents();
        this.userProcessConatiner = userProcessConatiner;
        this.siteEnterprise = siteEnterprise;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        siteJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        siteJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Vaccine Type", "Vaccine Name", "Batch", "Availability", "Funding"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(siteJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 138, 930, 166));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Manage Site Inventory");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, -1, -1));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 35, 90, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessConatiner.getLayout();
        userProcessConatiner.remove(this);
        layout.previous(userProcessConatiner);
    }//GEN-LAST:event_btnBackActionPerformed

    private void populateTable()
    {
         DefaultTableModel model = (DefaultTableModel) siteJTable.getModel();
        model.setRowCount(0);
        
        if(siteEnterprise!=null)
        {
                    for(Batch b : siteEnterprise.getBatchDirectory().getBatchList())
                           {
                                  for(Vaccine v : b.getVaccineList())
                                   {
                                       if(b.getAvailability()>0)
                                       {
                                       boolean flag = true;
                                       Object[] row = new Object[6];
                                       row[0] = v.getVaccineType().getVaccineTypeName();
                                       row[1] = v.getVaccineName();
                                       
                                       for(String s : v.getVaccineType().getStateFundedList())
                                       {
                                           if(s.equals(siteEnterprise.getStateName()))
                                           {
                                               row[4] = "YES";
                                               flag = false;
                                               break;
                                           
                                           }
                                       
                                       }
                                       if(flag ==true)
                                       {
                                           row[2] = "NON FUNDED";
                                       
                                       }
                                       
                                       row[2] = b.getBatchID();
                                       row[3] = b.getAvailability();
                                       model.addRow(row);
                                       
                                   }
                                       break;
                                  }
                               
        
                           }
        }
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable siteJTable;
    // End of variables declaration//GEN-END:variables
}
