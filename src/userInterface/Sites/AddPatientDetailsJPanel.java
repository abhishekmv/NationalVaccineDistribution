/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Sites;

import business.Organization.Organization;
import business.Organization.PatientOrganization;
import business.Patient.Patient;
import business.Person.Person;
import business.Role.PatientRole;
import business.UserAccount.UserAccount;
import business.Utility.SendEmail;
import java.awt.CardLayout;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Abhishek
 */
public class AddPatientDetailsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddPatientDetailsJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private PatientOrganization patientOrganization;
   
    
    public AddPatientDetailsJPanel(JPanel userProcessContainer, UserAccount account,PatientOrganization patientOrganization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.patientOrganization = patientOrganization;
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        insuranceNameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        startDateJDateChooser = new com.toedter.calendar.JDateChooser();
        endDateJDateChooser = new com.toedter.calendar.JDateChooser();
        amountJTextField = new javax.swing.JTextField();
        addJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        policyJTextField = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Add Patient Details");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 57, -1, -1));

        jLabel2.setText("Insurance Name :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(182, 92, -1, -1));

        insuranceNameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insuranceNameJTextFieldActionPerformed(evt);
            }
        });
        add(insuranceNameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(289, 89, 169, -1));

        jLabel3.setText("Start Date :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 191, -1, -1));

        jLabel4.setText("End Date :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 233, -1, -1));

        jLabel5.setText("Policy Amount :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 270, -1, -1));
        add(startDateJDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(289, 185, 169, -1));
        add(endDateJDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(289, 227, 169, -1));
        add(amountJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(289, 267, 169, -1));

        addJButton.setText("Add Insurance Details");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        add(addJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(231, 324, -1, -1));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 57, -1, -1));

        jLabel6.setText("Policy Name :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(206, 141, -1, -1));
        add(policyJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(289, 138, 169, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        // TODO add your handling code here:
        
        boolean flag = false;
        try{
            String policy = policyJTextField.getText();
            String insuranceCompany = insuranceNameJTextField.getText();
            float claimAmount = Float.parseFloat(amountJTextField.getText());
            Date startDate = startDateJDateChooser.getDate();
            Date expiryDate = endDateJDateChooser.getDate();
            Calendar cal = Calendar.getInstance();
            
             if(!insuranceCompany.isEmpty())
             {
                 if(!policy.isEmpty())
                 {
                 if(startDate!=null)
                 {
                 
                     
                     if(expiryDate!=null)
                     {
                         if(expiryDate.compareTo(startDate)>0)
                         {
                         UserAccount ua = patientOrganization.getUserAccountDirectory().createUserAccount(account.getUserName(), account.getPassword(), account.getPerson(), account.getRole());
                ua.setStatus(account.getStatus());
                Person pat = account.getPerson();
               
                pat.getInsurance().setInsuranceCompanyName(insuranceCompany);
                pat.getInsurance().setPolicyTypeName(policy);
                pat.getInsurance().setPolicyAmount(claimAmount);
                pat.getInsurance().setPolicyStartDate(startDate);
                pat.getInsurance().setPolicyEndDate(expiryDate);
                ua.setPerson(pat);
                flag = true;
                
                 String subject="Congratulations, Dear Patient, USA";
                 String message="Your login credentials are - userid is :"+account.getUserName()+" and password is :"+account.getPassword();
                 SendEmail.SendEmail(pat.getEmailid(),subject, message);
                
               // userProcessContainer.remove(this);
                //     CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                 //    layout.previous(userProcessContainer);
                
                         }
                          else{
                              JOptionPane.showMessageDialog(null, "The policy expiry date should be greater than the policy start date");
                 
                            }
                     }
                     else{
                      JOptionPane.showMessageDialog(null, "Enter a valid insurance start date");
                 
                 }
                 
                 }else{
                      JOptionPane.showMessageDialog(null, "Enter a valid insurance start date");
                 
                 }
                 }else{
                      JOptionPane.showMessageDialog(null, "Enter a valid policy name");
                 
                 }
        
            }
             
             else{
            JOptionPane.showMessageDialog(null, "Enter an insurance name");
            }
        }
        catch(NumberFormatException nfe)
        {
            JOptionPane.showMessageDialog(null, "Enter a valid insurance amount");
        
        }
        
        if(flag == true)
        {
            userProcessContainer.remove(this);
               CardLayout layout = (CardLayout) userProcessContainer.getLayout();
             layout.previous(userProcessContainer);
            
        }
    }//GEN-LAST:event_addJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
         if(userProcessContainer.getComponent(userProcessContainer.getComponentCount()-1) instanceof ManageSiteUserAccountJPanel)
        {
            ManageSiteUserAccountJPanel msuajp = (ManageSiteUserAccountJPanel)userProcessContainer.getComponent(userProcessContainer.getComponentCount()-1);
            msuajp.populateTable();
            
        }
        
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void insuranceNameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insuranceNameJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insuranceNameJTextFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JTextField amountJTextField;
    private javax.swing.JButton backJButton;
    private com.toedter.calendar.JDateChooser endDateJDateChooser;
    private javax.swing.JTextField insuranceNameJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField policyJTextField;
    private com.toedter.calendar.JDateChooser startDateJDateChooser;
    // End of variables declaration//GEN-END:variables
}
